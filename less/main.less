// http://lesscss.org/

@import 'lesshat.less';
@import 'vars.less';
@import 'mixins.less';
@import 'breakpoints.less';

// *** variables and usage

// default (see functions for escaping)
.a {
  @my-height: 20px;
  width: @my-width;
  height: @my-height;
  content: 'I am defined in .a @{my-message}';
}

// *** selector stuff

// basic selector inherit
.b {
  .a;
}

// extend
.c {
  content: 'I am defined in .c';
}
.d:extend(.c) {}



.e {
  .my-mixin-1();
}

.f {
  .my-mixin-1(#666);
  content: @another-var;
}

// scope illustration
@size: 100px; // caller's parent scope - no protection

.g {
  @color: red; // caller's scope - protected
  .my-mixin-2();
  margin: @size @definedOnlyInMixin;
  color: @color;
}


// *** functions

// img calcs

.g {
  //background-image: data-uri('image/jpeg;base64', '../images/satan.jpg');
}

.h {
  width: image-width(@my-image);
  height: image-width(@my-image)/2;
  .blur(5px);
}

//escaping

.i {
  @pad: 50px;
  width: calc(~'100% - 10px');
  height: calc(~'100% - @{pad}');
}

//breakpoints
.column {
  width: @my-width;
  .tablet({
    width: @my-width/2;
  });
  .desktop({
    width: @my-width/4;
  });
}

// *** lesshat
// https://github.com/madebysource/lesshat

// prefix

.j {
  .box-sizing(border-box);
  .box-shadow(10px 10px 5px rgba(255, 255, 255, .5));
  .border-radius(10px);
  .background-size(cover);
}

// syntax for different browsers

.k {
  .background-image(linear-gradient(bottom, #fb83fa 0%,#e93cec 100%));
}

.l {
  .background-image(linear-gradient(bottom, '@{my-color}' 0%, #e93cec 100%));
}

// js functions!
.m {
  .contentReplace('Joe');
}

// js example
.n {
  .my-gradient-mixin();
}

